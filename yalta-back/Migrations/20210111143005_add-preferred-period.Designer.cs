// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yalta.Models;

namespace Yalta.Migrations
{
    [DbContext(typeof(YaltaContext))]
    [Migration("20210111143005_add-preferred-period")]
    partial class addpreferredperiod
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Yalta.Models.PreferredPeriod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Lower")
                        .HasColumnType("int");

                    b.Property<long?>("ProfilId")
                        .HasColumnType("bigint");

                    b.Property<int>("Upper")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfilId");

                    b.ToTable("PreferredPeriod");
                });

            modelBuilder.Entity("Yalta.Models.Profil", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BirthdayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Profil");
                });

            modelBuilder.Entity("Yalta.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Yalta.Models.PreferredPeriod", b =>
                {
                    b.HasOne("Yalta.Models.Profil", "Profil")
                        .WithMany("PreferredPeriods")
                        .HasForeignKey("ProfilId");
                });

            modelBuilder.Entity("Yalta.Models.Profil", b =>
                {
                    b.HasOne("Yalta.Models.User", "User")
                        .WithOne("Profil")
                        .HasForeignKey("Yalta.Models.Profil", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
